**인터페이스**

class 가 아닌 interface 를 사용한다.
순수 추상 클래스의 역할과 같으나 메소드의 public abstract 을 생략한다. ex) public interface ex1{ void sound(); void move(); }

다중 구현 , 다중 상속을 지원한다.
반드시 오버라이딩 해야한다.

인터페이스에서의 멤버 변수는 static, final, public 이 포함되었다고 간주한다.
이 3가지는 생략할 수 있다.(권장) static final 변수의 경우 대문자와 언더바로 분리.

UML에서 상속은 실선을 사용하지만 구현은 점선을 사용한다. 추상에서는 상속이라 표현하지만 인터페이스에서는 구현이라고 표현한다.

인터페이스를 사용하는 클래스들은 implements를 통해 받는다. extends 아님.
------------------------------------------------------------------------------------------------------------------------
** 다중 구현 **

상속에서는 다중 상속이 안되지만 다중 구현이 되는 이유는 뭘까??
A : 상속의 경우 메소드에 내용이 들어가기 때문에 어떤 클래스의 메소드를 써야할지 선택해야하는데 그걸 할 수 없다. 클래스 계층 문제도 발생
그러나 *인터페이스의 경우 메소드 오버라이딩 이기 때문에 무조건 자식의 메소드를 쓰게 되어있다. 따라서 상관이 없다.
